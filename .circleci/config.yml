version: 2
jobs:
  restore:
    docker:
      - image: mcr.microsoft.com/dotnet/core/sdk:3.1.101-alpine
    steps:
      - checkout
      - restore_cache:
          keys:
            - wcbot-{{ checksum "TelegramBot.Core/TelegramBot.Core.csproj" }}
            - wcbot-
      - run: |
          ##change the directory from the solution folder to project
          cd TelegramBot.Core
          ##appsettings & appsettings.Migration replaces
          sed -i.bak "s/_DEFAULT_CONNECTION_/${DEFAULT_CONNECTION}/g" appsettings.json
          sed -i.bak "s/_MIGRATION_DEFAULT_CONNECTION_/${MIGRATION_DEFAULT_CONNECTION}/g" appsettings.Migration.json
          sed -i.bak "s/_TOKEN_/${TOKEN}/g" appsettings.json
          sed -i.bak "s#_WEBHOOK_URL_#${WEBHOOK_URL}#g" appsettings.json ##specific delimiter
          dotnet restore
      - save_cache:
          key: wcbot-{{ checksum "TelegramBot.Core/TelegramBot.Core.csproj" }}
          paths:
            - ./bin
            - ./obj
      - persist_to_workspace:
          root: .
          paths:
            - .
  test:
    docker:
      - image: mcr.microsoft.com/dotnet/core/sdk:3.1.101-alpine
    steps:
      - attach_workspace:
          at: .
      - run: |
          dotnet build
          dotnet test
  build_image:
    docker:
      - image: circleci/buildpack-deps:buster
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker:
          docker_layer_caching: false
      - run: |
          docker build -t $DOCKERHUB_USERNAME/$DOCKER_IMAGE_NAME:latest -t $DOCKERHUB_USERNAME/$DOCKER_IMAGE_NAME:$CIRCLE_BRANCH -t $DOCKERHUB_USERNAME/$DOCKER_IMAGE_NAME:$CIRCLE_BRANCH-$CIRCLE_SHA1 .
          echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
          docker push $DOCKERHUB_USERNAME/$DOCKER_IMAGE_NAME
  migrate:
    docker:
      - image: mcr.microsoft.com/dotnet/core/sdk:3.1.101-alpine
    steps:
      - attach_workspace:
          at: .
      - run: |
          cd TelegramBot.Core
          PATH=$PATH:/root/.dotnet/tools ASPNETCORE_ENVIRONMENT=Migration dotnet tool install -g dotnet-ef --version 3.1.101
          PATH=$PATH:/root/.dotnet/tools ASPNETCORE_ENVIRONMENT=Migration dotnet ef database update
  restart_image:
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - attach_workspace:
          at: .
      - run: |
          ssh -o "StrictHostKeyChecking=no" $REMOTE_USERNAME@$REMOTE_HOST "docker images | grep $DOCKERHUB_USERNAME/$DOCKER_IMAGE_NAME" >> images.txt
          cat images.txt | awk '{print $3}' >> filtered_images.txt
          ssh -o "StrictHostKeyChecking=no" $REMOTE_USERNAME@$REMOTE_HOST "docker service update --image $DOCKERHUB_USERNAME/$DOCKER_IMAGE_NAME:$CIRCLE_BRANCH-$CIRCLE_SHA1 $SERVICE_NAME"
          xargs < filtered_images.txt -n 1 ssh -o "StrictHostKeyChecking=no" $REMOTE_USERNAME@$REMOTE_HOST "docker rmi --force $1"

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - restore:
          filters:
            branches:
              only: master
      - test:
          requires:
            - restore
      - build_image:
          requires:
            - test
          filters:
            branches:
              only: master
      - restart_image:
          requires:
            - test
            - build_image
      - migrate:
          requires:
            - test
            - restart_image